{"pages":[{"title":"想说的一些话","text":"以前总是羡慕别人有博客，现在咱也是有博客的人了哈哈😄 网站之前的内容过于羞耻基本都隐藏了👼 联系方式： QQ: 3056829145 微信：alittlebear1 discord：alittlebear 邮箱：joseph.siu2005@gmail.com","link":"/about/index.html"},{"title":"分享点熊猫图片","text":"图片加载可能有点慢…","link":"/album/index.html"},{"title":"在线小游戏","text":"小游戏平台 https://a-little-bear.github.io/game/ 这个有很多廉价小游戏。 小游戏平台 无名杀 https://a-little-bear.github.io/game/wms HTML单机三国杀 迷宫 https://www.a-little-bear.github.io/g/migong 游戏操作方法很简单，用键盘的方向键控制即可（所以手机不能玩）; 如果你觉得太简单，可以随时调整迷宫的宽和高，增加迷宫的难度，刷新网页后迷宫还原。 迷宫 圈小猫 https://www.a-little-bear.github.io/g/cat 游戏规则 点击小圆点，围住小猫； 你点击一次，小猫走一次； 直到你把小猫围住（赢），或者小猫走到边界并逃跑（输），游戏结束。 (我才不会告诉你我懒的截图) 圈小猫 切水果 https://www.a-little-bear.github.io/g/FruitNinja 自从iOS和Android兴起以来，水果忍者游戏一直是这两个平台上面相当热门的游戏，很多玩家都会在工作学习之余切切水果，打发时间。今天，HTML5网页版水果忍者游戏同样给大家带来了不同的感觉，赶紧来试试这款好玩的HTML5网页版水果忍者游戏吧。 切水果 中国象棋 https://www.a-little-bear.github.io/g/xiangqi 棋类游戏在桌面游戏中已经非常成熟，中国象棋的版本也非常多。今天这款基于HTML5技术的中国象棋游戏非常有特色，我们不仅可以选择中国象棋的游戏难度，而且可以切换棋盘的样式。程序写累了，喝上一杯咖啡，和电脑对弈几把吧，相信这HTML5中国象棋游戏的实现算法你比较清楚，可以打开源码来研究一下这款HTML5中国象棋游戏。 中国象棋 Flappy Bird https://www.a-little-bear.github.io/g/flappy-text 前段时间Flappy Bird游戏那是相当的火，有无数年轻人为之疯狂，这里我们要分享一款奇葩版的Flappy Bird——HTML5 Flappy Text游戏，用若干个字母来代替bird，每触碰一个障碍，字母就会少一个。一起来玩玩吧。 Flappy Bird 吃豆人 https://www.a-little-bear.github.io/g/pacman HTML5吃豆人游戏，画面上有一个吃豆人和一群怪物，你需要控制吃豆人移动吃掉路上的小豆子，一旦吃豆人遇到怪物被吃掉的时候，你就GAME OVER了。这款HTML5游戏还有一点没完善，就是吃豆人碰到怪物的时候不能被怪物吃掉，有兴趣的同学可以继续把它完善。HTML5游戏开发不仅需要技术，也需要创意。 吃豆人 太空战机 https://www.a-little-bear.github.io/g/fly 这又是一款制作精良的HTML5游戏，该HTML5游戏的主角是一架英勇威武的太空战机，进入游戏后按”Z”键发射子弹，消灭敌机。该HTML5战机游戏的特点是：1、游戏画面非常华丽逼真，并且加入声音元素，让游戏更加迷人；2、游戏元素很多，敌机类型和发射子弹类型也很多，让玩家不会枯燥。 太空战机 超级玛丽 https://www.a-little-bear.github.io/g/mario 还记得小时候一起玩过的超级玛丽冒险游戏吗？是的，那是我们小时候很火的一款游戏，今天老外利用HTML5技术让超级玛丽可以在网页上跑了，HTML5版的超级玛丽虽然没有原版的功能强大，但是如果你有兴趣，完全可以把它写完善了。HTML5真的很强大，HTML5游戏方面更是犀利。 超级玛丽 城市消消乐 https://www.a-little-bear.github.io/g/xiaoxiaole 很不错的HTML5消除游戏，同样颜色的建筑相邻，可以将它们进行合成，建筑随之升级。必要的时候可以点击没有与之相邻的建筑物进行拆除。游戏结束后会有当前分数和历史最高分数，有预留的分享功能待开发，有需要的下手吧！ 城市消消乐 打地鼠 https://www.a-little-bear.github.io/g/mouseHit 游戏功能： 帮助界面 游戏预备开始 5种不同地鼠的随机出现 关卡设置，当然有计时条显示 失败和通过关卡设置 音效设置 该游戏兼容Chrome和FF（效果最不错），但IE有问题（声音也播不出）。。。 打地鼠 捕鱼达人 https://www.a-little-bear.github.io/g/buyudaren 非常逼真的捕鱼达人网页游戏源码下载，基于HTML5和JS特效实现，游戏动画非常的炫，不卡顿，大家有时间的完全可以学习学习，HTML5做游戏跟客户端其实是各有各的优势，做到平衡就好。 捕鱼达人 神殿逃亡 https://www.a-little-bear.github.io/g/shendian 神殿逃亡是一款逃亡向的休闲益智小游戏。神殿逃亡游戏采用的像素风格将带领玩家回到老板卡带游戏时代。玩家在神殿逃亡游戏中需要控制自己的小主人公移动和躲避，逃脱神殿里袭来的各种威胁。游戏操作简单，角色也有多种选择。还有各种成就为追求完美的你而准备。","link":"/game_index/index.html"},{"title":"","text":"用的是网易云音乐的api，很多歌放几秒就自动跳过了。。 无法释怀的循环音乐 标签：轻音乐-放松-经典 介绍： 闭上双眼，感受这些音乐带给你我心灵的冲击… 书店音乐单-安静英文歌 标签：清新-学习-安静 介绍： 喜欢逛书店，也喜欢书店里的那些音乐，似乎书店和读者之间总有一些共鸣，听音乐、看书，和一切美好的时光相遇。 历届格莱美金曲 标签：欧美-流行-摇滚 介绍： 格莱美奖(Grammy Awards)，美国录音界与世界音乐界最重要的奖项之一，由录音学院(Recording Academy)负责颁发。学院由录音业的专业人士所组成，目的在于奖励过去一年中业界岀色的成就。格莱美奖是美国四个主要音乐奖之一，相当于电影界的奥斯卡奖；另三个音乐奖分别为公告牌音乐奖、全美音乐奖和摇滚名人堂收录典礼。 不朽的声音(人生最难忘的歌) 标签：欧美-经典-怀旧 介绍： 《不朽的声音-人生最难忘的歌》从小到大，我们一直在聆听。聆听父母的教诲、聆听老师的教导、聆听领导的指示、聆听女朋友的悲情苦诉、聆听男朋友的志得意满。突然有一天在那一刹那，心象开了一个口的急流，沉积了多年的声音尤如涛涛江水一般绵绵不绝地涌了出来。 这声音是那样的熟悉、真切、它曾引导我们走出懵懂无知的岁月，它曾支撑我们度过苦涩艰难的日子，就象漆黑夜晚的点点星光，就象汪洋大海中的引航灯，让我们再次感觉到了身体里流过了一股幸福的暖流。流出的是声音，流不走的是留在我们心中的深深印记。在我们开始遗忘、再度开始迷茫的时候，静静地、静静地，它用不朽的声音，再度弥漫在我们呼吸的每一口空气中。 经典国内老歌 标签：粤语-怀旧-华语 介绍： 在时光中沉淀的首首经典老歌，承载了一段段印刻在内心最深处的回忆。重温经典，回味那些逝去的时光 满满的回忆，有Beyond，陈百强，刘德华，陈慧娴，周华健，张学友，谭咏麟，张国荣，李克勤。怀旧必备！ 草原歌曲100首 标签：民族-驾车-旅行 介绍： 人们都非常向往大草原，想象着那里的茵茵碧草，悠悠白云，湛蓝如洗的天空，还有奔驰的骏马和成群的牛羊……并非每个人都去过美丽的大草原，但每个人肯定都听过草原歌曲。美妙的旋律，一下子就能把我们的心带到大草原。今天，好听的草原歌曲送给你，祝你每天都有好心情~ 永远听不腻的英文歌 标签：欧美-驾车-校园 介绍： 每一首都值得单曲循环，节奏、歌词、旋律，至少一个能打动你我… 世界顶级古典钢琴曲 标签：古典-钢琴-轻音乐 介绍： 钢琴，乐器之皇，钢琴文化发展至今，已经有不计其数的脍炙人口的钢琴曲流传下来，其中一些流传至今，仍是社会上流人士的最爱，让我们来一起聆听一下传世名曲吧！","link":"/music/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=706851956 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E4%B8%96%E7%95%8C%E9%A1%B6%E7%BA%A7%E5%8F%A4%E5%85%B8%E9%92%A2%E7%90%B4%E6%9B%B2/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=67191770 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E4%B8%8D%E6%9C%BD%E7%9A%84%E5%A3%B0%E9%9F%B3(%E4%BA%BA%E7%94%9F%E6%9C%80%E9%9A%BE%E5%BF%98%E7%9A%84%E6%AD%8C)/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=39554181 — 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E4%B9%A6%E5%BA%97%E9%9F%B3%E4%B9%90%E5%8D%95-%E5%AE%89%E9%9D%99%E8%8B%B1%E6%96%87%E6%AD%8C/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=517182285 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E5%8E%86%E5%B1%8A%E6%A0%BC%E8%8E%B1%E7%BE%8E%E9%87%91%E6%9B%B2/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=8435661 — 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E6%97%A0%E6%B3%95%E9%87%8A%E6%80%80%E7%9A%84%E5%BE%AA%E7%8E%AF%E9%9F%B3%E4%B9%90/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=2985947572 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E8%8D%89%E5%8E%9F%E6%AD%8C%E6%9B%B2100%E9%A6%96/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=2985915860 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E6%B0%B8%E8%BF%9C%E5%90%AC%E4%B8%8D%E8%85%BB%E7%9A%84%E8%8B%B1%E6%96%87%E6%AD%8C/index.html"},{"title":"","text":"网易云音乐地址：https://music.163.com/#/playlist?id=2985941712 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/%E7%BB%8F%E5%85%B8%E5%9B%BD%E5%86%85%E8%80%81%E6%AD%8C/index.html"}],"posts":[{"title":"受AdaBoost启发的Margin Theory间隔理论","text":"到底什么是AdaBoost？用动画和代码的方式，最清晰讲解！_哔哩哔哩_bilibili 这个视频直观的解释了AdaBoost是什么，和它为什么效果这么好 【报告】Boosting 25年（2014周志华）（up主推荐）_哔哩哔哩_bilibili 这个视频周教授深入的探讨了AdaBoost到底为什么效果这么好，模型迭代过程中到底是在优化什么。从这方面引申出了间隔理论的提出，争论，以及最后是如何完善的。 决策树可以简单直观高效的分类样本，不过单个决策树往往会因为样本的复杂性而增加模型复杂度，在树变的很深的时候很容易过拟合。 最简单的（集成学习）优化方法就是bagging - 随机森林将样本空间进行拆分/随机采样成不同的训练子集，并行训练几个不同的决策树（强学习器，i.e. 直接去尝试对整个样本空间去进行拟合），最后通过投票/平均值来给出最终答案。 这么做最明显的好处就是模型的泛化能力更强了，更robust稳定了，方差Variance也降低了，但是相对的是对于样本空间被错分的样本缺乏关注，也就是偏差Bias提高了。 基于Bias-Variance Decomposition，我们知道均方误差MSE可以分解为 Expected Error = Bias^2 + Variance + Irreducible Error 其中 不可约误差是数据的噪声，也叫贝叶斯误差。 我们可以看到，想要降低均方误差（期望误差），我们就要降低Bias^2 + Variance，又因为Bias和Variance在模型训练过程中是相对的：降低Variance不可避免地要提升Bias，反之一样。所以处于平衡点的模型基本属于最优模型。 另外一个优化boosting - AdaBoost串行的训练决策树（单层最简决策树），和随机森林相比，与其训练几个复杂的模型，每一个都有不少误差，然后通过平均值/投票来尽量的抹平误差，AdaBoost直接在训练的过程中减少误差，当然不可避免的方差就比随机森林要略高了。 下面内容来自周教授的讲座视频 Kearns和Valliant先是在STOC’89提出 可弱学习（存在准确率大于50%的模型）是否等价于可强学习（存在一个精度接近100%的模型）。 然后1990年Schapire从数学上证明了他们是等价的。 1997年，Schapire和Freund给出了可应用的算法 - AdaBoost。 基本来说，AdaBoost通过给前面分类错误的样本添加一个指数级大的权重，来影响下一次模型迭代”分界线“，这样模型就会尽可能地尝试将这些之前被分类错误的样本正确的给分类出来。这样我们就可以看到：最影响模型边界的样本往往是那些很容易/一直被错误分类的样本，类似于SVM的Support Vectors。 AdaBoost最著名的一个应用就是人脸检测的Viola-Jones检测器（基于Haar特征），它前几个阶段先只用AdaBoost的前几个弱分类器去检测人脸是否存在，通过了才会运行后面的弱分类器，这样大大的减少了计算量。 AdaBoost也是现在基本所有boosting算法的基础，AdaBoost奠定了此类算法的核心机制，优化AdaBoost相当于优化所有基于AdaBoost的boosting算法。 现在考虑从数学上观察AdaBoost的准确率。 Schapire和Freund在1997年给AdaBoost了一个上界，只要每个弱学习器的准确率严格大于50%，并且弱学习器的准确率不会随着迭代趋于50%，那么训练错误指数级减少，且有上界 e−2Tγ2, T是迭代数量，γ是0.5 − ϵt ≥ γ, γ &gt; 0, ∀t ∈ [T]。 当然训练误差只能表明模型对于现有数据的拟合度，不能作为模型泛化能力的估计。他们也给出了泛化误差：在1 − δ概率下$$\\epsilon_{\\mathcal{D}}\\le\\epsilon_D+\\tilde{O}\\left(\\sqrt{\\frac{dT}{m}}\\right)$$其中𝒟是测试数据集，D是训练数据集，d是弱学习器的VC-dimension（模型越简单d越小），T是迭代数量，m是样本数量，Õ省略了其他变量。 我们可以看到这里的上界，AdaBoost迭代次数越多，上界越大，这里是否表示了AdaBoost随着迭代次数增加会逐渐过拟合模型？ 从测试误差的数据上来看，AdaBoost并不会过拟合。这算不算是违背了奥卡姆剃刀原理（最简单即最好）？ 这里有两种流派尝试解释这一现象： Margin Theory（Schapire, Freund, Bartlett &amp; Lee, 1998） Statistical View（Friedman, Hastie &amp; Tibshirani, 2000） Statistical View Ann.在2000年指出AdaBoost可以近似成对additive model $H(x)=\\sum_{t=1}^Ta_th_t(x_t)$的logistic function来预测概率，用牛顿法对指数/对数损失函数进行优化 ℓlog(h|𝒟) = 𝔼x ∼ 𝒟[ln (1 + e−2f(x)h(x))] 从这个角度出发，衍生出了很多其他boosting算法，通过其他方法来优化对数损失函数，如LogitBoost LPBoost L2Boost RegBoost。 问题是，Statistical View就是解释不了为什么AdaBoost不会过拟合，很多理论也和现实数据冲突。 比如说，这个观点解释不了为什么VC-dimension增加（从单层决策树变为8节点树）会拟合的更好；LogitBoost理论上有噪音的时候比AdaBoost要好，但是结果上是反过来的；还有最重要的，模型早点停止可以防止过拟合，但事实上不停也不会过拟合。 Margin Theory 间隔理论 在机器学习方法，模式识别与机器学习，和周教授的西瓜书里，关于AdaBoost也都只是介绍了上面的观点。间隔理论虽然在统计学中没有明确的定义，但是在实际应用中发现理论都是没问题的。 这里AdaBoost的间隔理论和SVM的区别是，SVM是完全基于间隔理论进行的算法优化设计，而AdaBoost仅仅是套一个间隔理论模型的壳来（启发性的）解释为什么AdaBoost优化的没问题，这里AdaBoost实际优化的并不是间隔。 二元分类本质上都可以看作是把数据找一个超平面拆分开来，我们可以认为间隔margin（超平面两边距离决策边界的和）越大，我们分类的把握性就越大。 Schapire et al.在1998年基于间隔理论给出了一个新的上界 $$\\epsilon_{\\mathcal{D}}\\le\\mathbb{P}_{x\\sim\\mathcal{D}}(f(x)H(x)\\le\\theta)+\\tilde{O}(\\sqrt{\\frac{d}{m\\theta^2}+\\ln\\frac1\\delta})$$$$\\le 2^T\\prod_{t=1}^T\\sqrt{\\epsilon_t^{1-\\theta}(1-\\epsilon_t)^{1+\\theta}}+\\tilde{O}(\\sqrt{\\frac{d}{m\\theta^2}+\\ln\\frac1\\delta})$$ 其中θ是间隔。可以看到样本数量m越大误差越小，模型复杂度越小误差越小，还有间隔越大误差越小。 上面的Õ展开来是$O\\left(\\frac{1}{\\sqrt{m}}\\left(\\frac{\\ln m\\ln |\\mathcal{H}|}{\\theta^2}+\\ln\\frac1\\delta\\right)^{1/2}\\right)$，可以看到是$O(\\sqrt{\\log m/m})$。 所以。基于最小间隔的想法，Breiman在1999年提出了一个更紧的上界：$$\\mathbb{P}_{\\mathcal{D}}(yf(x)&lt;0)\\le R(\\ln(2m)+\\ln\\frac1R+1)+\\frac1m\\ln\\frac{|\\mathcal{H}|}{\\delta}$$ 其中$\\theta&gt;4\\sqrt{\\frac{2}{|\\mathcal{H}|}}$和$R=\\frac{32\\ln 2|\\mathcal{H}|}{m\\theta ^2}\\le 2m$可以看到是O(log m/m)。 由于log m/m &lt; 1, Breiman确实给出了一个更紧的上界。换句话来说，如果用同样的训练样本（数量m），那么Breiman的上界比Schapire的更准确一些。 于是，基于这个理论，Breiman同时设计了一个基于AdaBoost的变种arc-gv，通过直接最大化最小间隔来优化算法（类似于SVM了）。问题是实验结果看下来虽然minimum margin确实是比AdaBoost更大了，但测试误差也变大了许多。 这就说明了，minimum margin 无法解释为什么AdaBoost效果这么好。 Reyzin和Schapire深入的研究了Breiman的arc-gv，发现这个模型的VC-dimension虽然是固定的，但是实际上还是和AdaBoost的stumps单层决策树有区别。这个区别就影响了实验结果。 当他们把arc-gv的弱学习器也变为decision stumps单层决策树（树墩），就看到arc-gv虽然minimum margin最大，但是更关键的margin distribution更差了。这里他们就发现了，比最小间隔更重要的是平均/中位间隔，分布比极端数值更重要。 Wang et al.在2011给出了一个具体的基于margin distribution的更紧的上界（这里的margin称之为Emargin），也是O(log m/m)，不过问题是这里的界过于复杂，而且考虑了比前面Breiman和Schapire更多的信息，比如说KL散度，所以光从这个界上判断，无法知道这个更紧的界更紧是因为获取的信息更多了还是因为margin distribution比minimum margin更本质。 Gao&amp;周教授在2013提出了一个新的margin bound，叫kth margin bound，并指出前面的minimum margin和2011提出的Emargin都是属于kth margin bound的一个特例，都不能真正的代表margin distribution。并且，给出了一个真正的margin distribution的界： $$\\mathbb{P}_{\\mathcal{D}}(yf(x)&lt;0)\\le\\frac2m+\\inf_{\\theta\\in(0,1]}\\left[\\mathbb{P}_S(yf(x)&lt;\\theta)+\\frac{7\\mu+3\\sqrt{3\\mu}}{3m}+\\sqrt{\\frac{3\\mu}{m}\\mathbb{P}_S(yf(x)&lt;\\theta)}\\right]$$ 这里 $\\mu=\\frac{8}{\\theta^2}\\ln m\\ln(2|\\mathcal{H}|)+\\ln\\frac{2|\\mathcal{H}|}{\\delta}$。可以看到是O(log m/m)。可以证明这个界比Breiman和Schapire的界都一致更紧，并且用到的信息完全一样。 这就十分肯定的证明了考虑margin distribution的确是比minimum margin要好，更本质，更精确。 准确来说，通过一些变换，上面的界可以变换为考虑average margin和margin variance，那就是，同时考虑这两个属性比考虑minimum margin更本质。 Shivaswamy和Jebara在2011也已经给出了同时最大化average margin和最小化margin variance的算法，结果也是十分完美。 SVM 传统的SVM模型是通过最大化minimum margin来进行优化收敛的。基于上面的研究，我们可以看到用average margin和margin variance来优化SVM理论上模型测试误差会比传统的要好。 Large margin distribution machine | Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining Zhang和周教授在2024年也发表了这篇论文肯定了相关的优化。","link":"/posts/ea89/"},{"title":"非线性卷积滤波","text":"在学习计算机视觉的线性和非线性滤波的时候，突然想到了几个最火的CNN模型AlexNet, GVV, GoogLeNet, ResNet, 卷积核滤波全部都是线性的，有点好奇关于这方面换成非线性卷积滤波会不会有什么进步。 相关论文： Network In Network Non-Linear Convolution Filters for CNN-Based Learning A Non-Linear Convolution Network for Image Processing Network In Network 2014 作者注意到了卷积核本质上还是广义线性函数的模拟，NiN网络通过是用1x1卷积核来增加模型的抽象/非线性能力，最后用max pooling代替FC全连接层来减少参数量和模型过拟合。 这里作者还是没有真正的去解决原始的问题。 Non-Linear Convolution Filters for CNN-Based Learning 2017 非线性滤波的计算复杂性普遍过大，而且很多很难从数学上进行比较直观的优化。 作者考虑了二阶Volterra卷积滤波+BN代替普通线性卷积滤波的可行性。作者只是将一层线性卷积滤波替换为二阶Volterra卷积，各项数据看起来都有微小进步，基本上是肯定了非线性卷积滤波的实用性，不过仅从这一层的更改来看数据进步的还是比较小。 这里作者的CNN模型是在没有residual等变种的基础下和一个普通的residual模块进行比较。 A Non-Linear Convolution Network for Image Processing 2021 这篇论文基本上用的还是二阶Volterra卷积，不过增加了自适应权重来增强模型的representation ability。 和上一篇相比，本文考虑了是用和residual一样的Bypass架构来保留原始信息流和增加特种丰富性，还考虑了NiN一样的使用1x1卷积层来降维/压缩特征，降低计算负担。看起来基本是基于普通CNN模型，修改滤波为二阶Volterra卷积滤波，增加BN归一化，然后融合inception模型和residual模型的抽象能力/计算简化模块，融合成了一个比较新型的CNN模型。 作者还考虑了模型刚开始是用并行非线性卷积滤波来增加receptive field，不过因为参数增加的太多了还是不实用。 此模型在几个常见的图像处理任务都从SSIM和PSNR指标上普遍优于线性卷积滤波模型，而且参数量显著减少（线性卷积滤波模型通过不同模块的很多参数和激活函数，pooling来模拟一个函数，相比之下非线性卷积滤波模型可以在相同模块内自己训练非线性特征，某种意义上来说模型的抽象能力更强了） 结论 现在对于滤波的非线性化的看法是在优化卷积神经网络的复杂度，提高模型表达能力，泛化能力。类似于添加1x1卷积核，添加BN层，修改FC层为max pooling。由于目前线性卷积滤波的universal function approximation已经足够精确，或者说表达能力已经十分完美了，模型泛化误差已经某种意义上来说低到人类做不到了，滤波非线性化的修改并不会显著的去影响模型的结果，只能是作为一个微调，优化。 又或者说，现在的卷积神经网络对于非线性的近似已经做的十分完美了，在这方面修改滤波效果不大。想要在图像特征提取方面做一些突破，基本要一些新的想法，比如说注意力机制，等。","link":"/posts/5a04/"},{"title":"强化学习几个不等式推导","text":"学习强化学习multi-armed bandit的时候，几个概率不等式没有推导过程课上直接使用了，这里记一下推导过程。 相关不等式： Markov, Chebyshev, Chernoff Bonding, Hoeffding Markov’s Inequality $$\\mathbb{P}(X\\ge a)\\le\\frac{\\mathbb{E}[X]}{a},a&gt;0$$ 证明1 Let $Y_a=\\begin{cases}0, X&lt;a\\\\a, X\\ge a\\end{cases}$, then Ya ≤ X which implies 𝔼[Ya] ≤ 𝔼[X], combining with the fact that 𝔼[Ya] = ℙ(X ≥ a) × a, we obtain $\\mathbb{P}(X\\ge a)\\le\\frac{\\mathbb{E}[X]}{a}, a&gt;0$, as needed. 证明2 𝔼[X] = ∫0∞xp(x)dx ≥ ∫a∞xp(x)dx ≥ ∫a∞ap(x)dx = ℙ(X ≥ a) × a 证明3 Let $Y=\\frac{U}{a}$ which gives $\\mathbb{E}[Y]=\\frac{\\mathbb{E}[X]}{a}$, then ℙ(X ≥ a) = ℙ(Y ≥ 1). What we want to show is ℙ(Y ≥ 1) ≤ 𝔼[Y], i.e. 𝕀{Y ≥ 1} ≤ Y (then take expectation on both sides give the desired result). Case 1: Y ≥ 1. Then the inequality holds. Case 2: Y &lt; 1. Then the indicator is 0 showing the inequality holds, Hence we conclude the Markov’s Inequality holds. Chebyshev’s Inequality $$\\mathbb{P}(|X-\\mu|\\ge c)\\le\\frac{\\sigma^2}{c^2}, c&gt;0$$ $$\\mathbb{P}(|X-\\mu|\\ge k\\sigma)\\le\\frac{1}{k^2}, k&gt;0$$ Where μ is the mean, σ is the standard deviation 证明 Using Markov’s Inequality, By letting X := (X − μ)2, a := c2, we see $\\mathbb{P}((X-\\mu)^2\\ge c^2)\\le \\frac{\\mathbb{E}[(X-\\mu)^2]}{c^2}=\\frac{\\sigma^2}{c^2}$ which gives $$\\mathbb{P}(|X-\\mu|\\ge c)\\le\\frac{\\sigma^2}{c^2}$$ By letting c := kσ, we see $$\\mathbb{P}(|X-\\mu|\\ge k\\sigma)\\le\\frac{\\sigma^2}{k^2\\sigma^2}=\\frac{1}{k^2}$$ Chernoff Bonding Method Let MZ(s) := 𝔼[esZ] be the moment generating function. ℙ(Z ≥ t) ≤ infs &gt; 0e−stMZ(s) 证明 Apply Markov’s Inequality, ℙ(Z ≥ t) = ℙ(esZ ≥ est) ≤ e−st𝔼[esZ] = e−stMZ(s), take inf of all s &gt; 0 gives the result. Hoeffding’s Inequality {Zi}i ∈ Λ ⊂ ℝ be independent random variables. If ai ≤ Zi ≤ bi for all i ∈ Λ, for some ai, bi, then let Sn = ∑iZi, we have $$\\mathbb{P}(|S_n-\\mathbb{E}[S_n]|\\ge t)\\le 2e^{-\\frac{2t^2}{\\sum_i (b_i-a_i)^2e}}$$ 证明 Using Chernoff Bonding Method, and replacing infimum to minimum since it is achievable, we have ℙ(Sn − 𝔼[Sn] ≥ t) ≤ mins &gt; 0e−st𝔼[es(Sn − 𝔼[Sn])] 省略","link":"/posts/39c0/"},{"title":"CLRS-videos","text":"Pygame application consisting of CLRS videos (or video?) made using 3b1b’s manim a-little-bear/CLRS-videos: grade 12 project (github.com)","link":"/posts/43f1/"},{"title":"ParabolaSimulator","text":"Grade 10 CS project made by Java (Swing) and JFreeChart ParabolaSimulation/ at master · a-little-bear/ParabolaSimulation (github.com)","link":"/posts/593d/"},{"title":"Text Advanture Game","text":"language: Turing (?) a-little-bear/TextAdvantureGame: grade 9 project (github.com)","link":"/posts/9077/"},{"title":"Books","text":"一些教科书的短评，基本都是上课配套的所以评价基本都是和课程绑定的 很多只是偶尔借鉴一下的没评价 Math Proofs: A Long-Form Mathematics Textbook - Jay Cummings The first proof-related textbook I have read. The remarks are so detailed, and the additional topics are so interesting. I learned so much from this book, it prepared me fully for mat157 and other proof courses. It is also worth go over again because of the interesting topics after each chapter. Real Analysis: A Long-Form Mathematics Textbook - Jay Cummings Very traditional US style first real analysis course textbook. I really like how cheap this book is. Content wise this book is very beginner friendly, but often too over-complicated and over-explaining to me… This book is definitely helpful for reference, when having some trouble understanding the materials in, for example, Spivak. Calculus in One Dimension I &amp; II - Tyler Holden I feel like Tyler over-complicated some of the proofs throughout the book, his rigorous style is probably not beginner-friendly. But the practice questions are nice, and is very aligning with standard 137/9, 157/9, so is probably a good reference book for these courses. An Excursion Through Elementary Mathematics - Antonio Caminha Muniz Neto First Volume Don’t trust the word “elementary” too much… The first volume literally covered most of my mat157/159 topics, even further for some topics. Most of the questions are from competitions and hints / solutions are provided for all questions which is so amazing… I enjoyed exploring the Putnam / IMO questions. Linear Algebra (4th Edition) - Stephen H. Friedberg This book is very similar to JT’s mat240 textbook probably except the beginning part (and the mat247 part). I really feel this book should be read after finishing the books like Gilbert Strang’s Introduction to Linear Algebra or 3blue1brown’s youtube videos. The order of the contents are kinda unintuitive without any prior linear algebra knowledge. Topology (Second Edition) - James R. Munkres I only finished the general topology section, and it is truly amazing (the algebraic topology section looks amazing too based on the foreshadows in the general topology section such as quotient topology). There are many definitions within the general topology section, however Munkres connected them through intuitive explanations and a very smooth order. My prof dcw also introduced CCC, filters and ultrafilters especially for Tychonoff’s theorem, because how general topology (point set topology) is very related to set theory, I can see why my prof brings this idea to the course, and it seems pretty useful as well for many ideas. In general, Munkres (2000) Topology with Solutions | dbFin helped me speed run the textbook questions, combining with the fact that Munkres is such a great book, I neither struggled too much nor spent too many time on Topology. Nevertheless, the availability of the solutions on dbFin and math stack exchange and the greatness of the book both make this the best book for introduction to topology. Linear Algebra Done Right (3rd Edition) - Sheldon Axler There are so many different ways to introduce the basic of linear algebra, it feels weird for me to learn in this way after reading Friedberg, and Strang’s MIT lectures, but definitely a great book emphasizing on functor, inner product, linear functional, and extending to complex F. A Walk Through Combinatorics, An introduction to Enumeration, Graph Theory, and Selected Other Topics (Fifth Edition) - Miklos Bona The provided solutions are awesome for study. The book is a relatively easy book to follow (same as Intro to Combinatorics), nothing too outstanding, quite standard. 数理逻辑十二讲 - 宋方敏 吴骏 第一本不是翻译英语的中文数学书，很多地方反而因为用词有点不明白。很喜欢中间关于ZFC的说明和后面model language与first order logic的关联，但总的来说还是一本全是定义没有直觉(intuition)的讲义，内容还是很有意思的，虽然很多时候过于枯燥或者平凡了。 A Brief History of Mathematics - Karl Fink First, before reading the book, the reader needs to have a decent background of every elementary mathematics topics, including Calculus, solving equations, some complex analysis, conic, etc. Second, the reader should also has a decent knowledge of the outstanding mathematicians (their era, their areas of interest, …), including Newton, Gauss, Leibniz, Euler, Euclid, Pythagorean, Abel, Pascal, Lagrange, Cauchy, Weierstrass, Bernuollis, etc. Otherwise, the massive number of names presented in the book, especially since it is separated based on area, is very confusion to match the eras. Hence, I can’t view this book as a introductory book to people who do not know much mathematicians, more like a wordy journey full of random mathematicians’ names, that give a brief order of how the elementary mathematicians was evolved, for people who at least know the major topics of undergrad mathematics. Therefore, for both content wise, and pre-requisite wise, this book isn’t quite good… Computer Science Introduction to Algorithms - C.L.R.S. I really like the coloring of the fourth edition. The book covers most of the topics taught in undergrad theoretical CS courses, without some variation, including data structure, algorithm design, computational complexity, etc. Even though the selected topics are not as detailed as books specified for the topics, the introductions are still amazing, and the concepts are well explained. The most amazing part of this book is that Github / Web has all of the solutions to the problems, for all editions. Grokking Algorithms: An illustrated guide for programmers and other curious people - Aditya Y. Bhargava The book is very beginner friendly, the topics are very intuitive and brief, following a logical order. The book is very short, so worth reading during 108 &amp; 148 I guess. Programming Pearls &amp; More Programming Pearls: Confessions of a Coder - Jon Bentley The ideas through the book are so fundamental, essential, and applied. We might not learn something very advanced or very fancy, but after understanding the book, at least when dealing with some problems, we know how to step back and think critically how to resolve the problems (from a broad perspective at least). But yeah, the 2 books are quite small so they don’t cover everything we need, but the essential ones. Worth reading for people with decent programming experiences, and probably for people who wanna learn how to create efficient algorithms (e.g. for competitive programming). Clean Architecture - Robert Martin This is the book my professor uses for csc207, to me it still seems like such complete architecture is way more complicated than needed for up to middle side project, the idea of separating different components, responsibilities, functions is awesome, but it’s just so boring and slow to construct such architecture especially as an undergrad student which his project worth almost nothing… But knowing these kinds of architectures are definitely super helpful for the professional industrial programmers. I actually find the SOLID principles, and the design patterns to be more useful and applicable as they really overlap with the clean architecture OOP’s 3 main concepts are also so related to them. The entire 300 pages book took me less than one day to read, the concepts are actually very light, the order is awesome, but this book still needs to be familiar with many professional vocabularies at the start, I had to google many words throughout the day. Statistics Others Your Memory: How It Works and How to Improve It - Kenneth L. Higbee Very nice book. I don’t know why I already know all the techniques provided throughout the book, but this book formalizes the informal methods I use to more formal and recognizable ways. I think the crucial part of this book, which is building an imaginary memory system in mind, requires a lot of practice, but beside this, the other parts help so much for daily memorization, such as PIN memorization, phone number / ID memorization, etc. The main disadvantage of these techniques is that for content involving logic, using weird tricks isn’t a good way, instead we should try first understand line by line what the words are stating, then with a more general image in mind, we can then derive the details. A Brief History of Time - Stephen Hawking Amazing book summarizing all the current physics topics. It’s a lot easier to read if the reader has some background of the terminologies / ideas, e.g. manifold, and the idea of dimension, etc. I have so many insights, questions, and ideas while reading this book, as the book mentioned, many of the modern theories are not fully proven. My insights might work better as well, but it’s very hard to convince everyone else, to collaborate with all other theories, and to be proven.","link":"/posts/d33b/"},{"title":"ACG","text":"小说 / 轻小说 / 动画 / 音乐 因为时间跨度几年，很多评分现在来看都要修正 尽量基于我的兴趣和价值观评价客观的主观 ACG - 2025-5-10.xlsx 应该需要翻墙，只有查看权限","link":"/posts/1621/"},{"title":"UofT Resources","text":"Campus Map, Websites, etc. Opening Hours / Schedules Robarts Library/Common UTM Library RAWC Empty Classroom Shuttle Bus 12345![](https://raw.githubusercontent.com/a-little-bear/picture/master/img/202405050026301.png) \\&lt;iframe src=&quot;https://drive.google.com/file/d/1xSIppPN13iJ7w72Ey2D4Yg1EA8WxGNcg/view?usp=drive_link&quot; width=&quot;100%&quot; height=&quot;700&quot; allow=&quot;autoplay&quot;&gt;\\&lt;/iframe&gt;![](https://raw.githubusercontent.com/a-little-bear/picture/master/img/202405050027899.png) Maps Maps and Directions ![UTM](https://raw.githubusercontent.com/a-little-bear/picture/master/img/202307261410020.jpeg) UTM General Map UTSG General Map Course Selection / Information Dates ACORN UofT Index Programs Directory UTSG Programs UTM Programs UTSG Courses UTM Courses Timetable 1234567891011https://uoftindex.ca/t/65015c0332313b4ba64de6e8![](https://s2.loli.net/2023/09/26/BTAFeDYk8qPwvsc.png)![](https://s2.loli.net/2024/01/15/QYMbfZeIwznB5ph.png)![](https://raw.githubusercontent.com/a-little-bear/picture/master/img/202405150405058.png)![](https://raw.githubusercontent.com/a-little-bear/picture/master/img/202409031133632.png)Wednesday S257 TUT is moved to MS2173","link":"/posts/dd39/"},{"title":"MAT102","text":"MAT102 Resources Resources Videos https://mikepawliuk.ca/introduction-to-proofs/ https://www.youtube.com/playlist?list=PLMsVksO7bo3kgpTG4_yEp1gVtlTZWQMmX Textbook &amp; Guides https://longformmath.com/proofs-home https://www.amazon.ca/Introduction-Proofs-Proof-Strategies-Fuchs/dp/1009096281 (can be found here https://annas-archive.org ) https://wp.a-little-bear.github.io/1:/MAT/MAT102/MAT102-Notes-2017-Version1_1.pdf https://wp.a-little-bear.github.io/1:/MAT/MAT102/cheng-proofguide.pdf Cantor-Schröder-Bernstein Theorem Proposition, Lemma 或 Theorem 有什么区别 Exams Pawliuk UTM Exam Bank Solutions to Exercises Overleaf (Course Notes) Long-Form Math","link":"/posts/f8e7/"},{"title":"将bat批处理命令文件固定到任务栏","text":"这里有两种，第一种就是转化成exe，第二种就要用巧方法了 通过Bat To Exe Converter 将bat文件转化成exe文件，论坛有，不过不是最新版的 转载自：https://blog.csdn.net/qq446282412/article/details/84587186 一、背景 最近有个需求，想把写好的bat脚本固定在任务栏上面，这样方便快速点击。 比如我桌面上有一个kill java.bat 文件，如下所示： kill java.bat 文件的内容为 taskkill /im java.exe /f 现在怎么才能将这个kill java.bat文件固定在任务栏上面呢？ 二、将bat批处理命令文件固定到任务栏 2.1 第一步，将kill java.bat 文件重命名为kill java.exe 2.2 将 kill java.exe 拉到任务栏 2.3 修改桌面的 kill java.exe 回 kill java.bat 2.4 打开快速启动栏路径 快速启动栏的路径为： %userprofile%ExplorerLaunch 在我的电脑路径上输入刚才的路径，然后回车即可 回车之后，会显示 快速启动栏的目录，如下所示 2.5 修改快速启动栏的属性 我们进入上面目录的子目录 %userprofile%ExplorerLaunchPinned 如上图所示，我们找到 kill java 文件，然后右键该文件–属性 属性 目标的数据如下 修改属性 目标的值为 桌面上的 kill java.bat 的路径即可。 “C:\\000java.bat” 2.6 运行我们的快速启动栏 点击运行之后， 任务管理器里面就没有java进程了。成功！ 三、修改任务栏图标 可能你会觉得刚才固定到任务栏的图标不好看，那么你可以通过修改图标的方式来进行修改 进入目录 %userprofile%ExplorerLaunchPinned 选择刚才的 【kill java】 图标，然后鼠标右键，点击【属性】 然后点击【更改图标】按钮 比如我们打算换成下面的图标 选择好图标之后，点击【确定】按钮 再次点击【确定】按钮 图标换了，但是任务栏上的图标没有刷新。 任务栏图标没有刷新，我当时也没有去管它了。不过重启windows系统的话，就会刷新，如下所示： 四、参考链接 https://zhidao.baidu.com/question/1637917825238414900.html http://www.xstui.com/read/345 https://github.com/DarrenRainey/battoexe 还有其他方式来实现将bat批处理命令文件固定到任务栏，参考以下链接 https://blog.csdn.net/tty521/article/details/79673843","link":"/posts/3d73/"},{"title":"gclone转存bat","text":"需要gclone，rclone等”基础“，还需要安装git。 前言 自己弄的一个gclone转存bot（搞了1周呢ww），需要能上GoogleDrive，需要配置好rclone，gclone，还有安装git。 比不上群里某些大佬写的python程序，但是我认为我的优势还是在： 单文件 （目前是俩文件，相信能解决的hh，ps：已解决） 批处理，不是python，不需要安装python，不需要安装node，不需要啥，除了一个git（玩Github的都有安装吧），还有配置完gclone就能运行。 代码看着简单，找着改着也简单，没有一堆程序文件 代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162@echo offchcp 65001C:cd C:\\AutoRclone-master::输入分享链接，并自动转化为idset /p url=文件夹/文件链接：set url=%url:https://drive.google.com/drive/folders/=%set RESULT=:nextif &quot;%url%&quot; equ &quot;&quot; goto endset a=%url:~0,1%if &quot;%a%&quot; equ &quot;=&quot; (set RESULT=%RESULT%#) else (set RESULT=%RESULT%%a%)set url=%url:~1%goto next:endset RESULT=%RESULT:?usp#sharing=%::这里是已经废弃的手动输入名字::set /p name=文件夹名称：::set name=%name: =%::echo 文件夹/文件链接id是：%RESULT%::echo 转存的文件夹名称为：%name%::echo 任意键开始转存（转存三次）::pause &gt; nul::gclone lsf {}:{{{}}} --dump bodies -vv 2&gt;&amp;1 | grep '&quot;{}&quot;,&quot;name&quot;' | cut -d '&quot;' -f 8::gclone lsf alittlebear:{%RESULT%} --dump bodies -vv 2&gt;&amp;1 | grep \\'&quot;%RESULT%&quot;,&quot;name&quot;\\' | cut -d ''\\'&quot;\\' -f 8::echo:::echo 任意键退出::pause &gt; nul::start 1.bat %RESULT%::这里是1.bat的内容@echo ongclone lsf alittlebear:{%RESULT%} --dump bodies -vv 2&gt;&amp;1 | grep '&quot;%RESULT%&quot;,&quot;name&quot;' | cut -d '''&quot;' -f 8@echo offecho:echo 复制lsf指令再按任意键（gclone lsf 到 -f 8）pause &gt; nul::打开git窗口,准备输入lsf获取分享名指令start &quot;Open Git Bash&quot; &quot;%SYSTEMDRIVE%\\Program Files\\Git\\git-bash.exe&quot;set /p name=输入git窗口获取到的分享名：set name=%name: =.%::开始转存,转存3次gclone copy alittlebear:{%RESULT%} alittlebear:/bat转存/%name%/ --transfers=40 --drive-server-side-across-configs -Pgclone copy alittlebear:{%RESULT%} alittlebear:/bat转存/%name%/ --transfers=40 --drive-server-side-across-configs -Pgclone copy alittlebear:{%RESULT%} alittlebear:/bat转存/%name%/ --transfers=40 --drive-server-side-across-configs -Pecho:echo 转存完毕，按任意键退出pause &gt; nul 文件下载 https://alittlebear.lanzous.com/ikKBEe36q7g ps：不想下载可以直接复制代码框的指令到记事本，然后命名为.bat文件就好 要改动的地方 把结尾\"%SYSTEMDRIVE%\\Program Files\\Git\\git-bash.exe\"改成你自己的git路径，默认应该就是我这个了。 结尾gclone copy alittlebear 中的alittlebear要改成你自己的remote名称 结尾alittlebear:/bat转存/也要改成你自己的remote名称和转存路径 1.bat中的alittlebear也要改成自己的remote名称 开头的 12C:cd C:\\AutoRclone-master 请换成自己的gclone路径 待补充 已知bug 暂时还需要1.bat，不能合并成1个单文件 运行1.bat时会弹出另外一个窗口，不会解决这bug。。。 待补充","link":"/posts/f18d/"},{"title":"hexo懒人必备：自动创建文章+自动部署博客","text":"懒人必备，很简单，但是花了大半天的美好时光~ 记得修改代码中的路径 C: cd /d %userprofile% 这个%userprofile%对应的目录是：C: 相关指令 1234567891011@echo off #不显示运行代码chcp 65001 #修改cmd窗口字符编码为UTF-8（由于中文乱码，所以添加了 chcp 65001。）set /p aaaa=bbbb #“aaaa”是变量名，“bbbb”是输入文字；指令是显示bbbb，等待输入，然后设置变量aaaa为（你输入的东西）%aaaa% #这个就是调用变量了，比如说上面输入了123，那么第一个生成指令就是hexo new 123cd xxx #我也不好形容，应该就是移动cmd到xxx目录（hiahiahia），跟你直接在博客目录shift+右键cmd一个效果#（下面我也不知道为啥要加。。。hh）hexo clean #清理博客public目录（一般不用）hexo g #生成博客public目录（部署之前都最好来一次）hexo s #本地部署博客（localhost:4000这个，调试啥可以用这个边看边弄）hexo d #部署博客到云端hexo a &amp;&amp; hexo b #就是先运行hexo a，运行完了再hexo b，懒人必学，比如说不用等hexo g半天之后再hexo d） 首先是自动生成文章（仅创建） 123456@echo offchcp 65001C:cd %userprofile%\\Desktop\\myblogset /p name=起个名：hexo new %name% 自动生成文章加强版（创建后任意键直接打开） 12345678910111213141516171819202122@echo offrem 解决中文乱码chcp 65001 set /p name=起个名： rem 定位到hexo源码地址C:cd /d %userprofile%\\Desktop\\myblog rem 运行hexo n 文件名start /min cmd /c &quot;hexo.cmd n %name%&quot; rem 等待hexo n完成choice /t 3 /d y /n &gt;nul echo 按任意键打开md（请等待hexo创建完）pause rem 定位到文章目录并开启文章cd source\\_postsstart %name%.md 因为我用了abbrlink，最好编辑之前hexo g一下 自动生成文章威力加强版（创建并生成后任意键直接打开） 12345678910111213141516171819202122232425@echo offrem 解决中文乱码chcp 65001set /p name=起个名：rem 定位到hexo源码地址C:cd /d %userprofile%\\Desktop\\myblogrem 运行hexo n 文件名start /min cmd /c &quot;hexo.cmd n %name%&quot;rem 我需要hexo g来提前生成文章绝对路径start /min cmd /c &quot;hexo.cmd g&quot;rem 等待hexo n完成choice /t 3 /d y /n &gt;nul echo 按任意键打开md（请等待hexo创建完）pauserem 定位到文章目录并开启文章cd source\\_postsstart %name%.md 然后是自动部署博客（g+d） 1234@echo offC:cd C:\\xxx\\Desktop\\mybloghexo g &amp;&amp; hexo d 自动部署博客加强版（c+g+d） 1234@echo offC:cd C:\\xxx\\Desktop\\mybloghexo clean &amp;&amp; hexo g &amp;&amp; hexo d 自动部署博客魔改本地版（g+s） 1234@echo offC:cd C:\\Users\\josep\\Desktop\\mybloghexo g -f &amp;&amp; hexo s 有需要的可以自己改。。 后记 比如说代码中的：hexo.cmd 我明明没有这个文件为啥还能运行，因为hexo安装成功后npm路径下默认有hexo.cmd 和hexo.ps1两个脚本文件。 hexo new 更新地址：https://www.a-little-bear.github.io/p/d8a4/","link":"/posts/4327/"},{"title":"Windows10 安卓模拟器 蓝屏解决","text":"网上全是关闭Hyper-V的，终于从一堆网页中找到了正确的。。。 这个是第一个找到的：https://blog.csdn.net/uddiqpl/article/details/85058407 我照做之后还是蓝屏，但是完完全全按照第二个的图片做，就没问题了 https://blog.csdn.net/qq_35272131/article/details/89843601 以前要开win10自带虚拟机，动过相关设置，好麻烦 Windows10兼容模拟器太差了（想开原版的每次都要调整设置）","link":"/posts/78e1/"},{"title":"博客相关的经验（ps：超级乱)","text":"一些最后解决博客相关问题的答案 （懒得维护，太累了，所以取消置顶嘿嘿） 博客透明 https://www.wolfdan.cn/Hexo-Next-Gemini%E4%B8%BB%E9%A2%98%E9%80%8F%E6%98%8E%E5%8C%96%E4%BB%A5%E5%8F%8A%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E7%9A%84%E6%9B%B4%E6%94%B9/ hexo文章内toc生成 https://yelog.org/2019/09/24/3-hexo-toc/ Hexo设置跳过渲染 https://alaxn.github.io/a819c9cf/ 一些html游戏源码 https://www.w3cschool.cn/html5/html5-game2.html https://blog.csdn.net/weixin_30493401/article/details/96779316 The requested URL returned error: 500: https://blog.csdn.net/github_38851471/article/details/89478755 在Markdown中实现内容及代码块折叠操作： https://blog.csdn.net/qq_40802448/article/details/103136825?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-4 Markdown语法大全： https://www.cnblogs.com/liugang-vip/p/6337580.html 重装node，hexo提示：no layout:index.html: https://www.52pojie.cn/thread-1182369-1-1.html https://github.com/hexojs/hexo/issues/4281 小地球：https://leflacon.top/783cca3a/ 关于博客园内嵌入bilibili视频 JS如何在页面中插入HTML代码 https://bbs.csdn.net/topics/330255909 开仓库的问题： Git遇到Unable to create ‘E:/xxx/.git/index.lock’: File exists.的解决办法 https://blog.csdn.net/tangkthh/article/details/90412139 github 用git bash上传项目 最后提示 Everything up-to-date 但没传上去 https://www.cnblogs.com/wenbinshen/p/9069851.html git身份验证失败 https://blog.csdn.net/linyunping/article/details/80694863 FTP上传： https://blog.csdn.net/suny2020/article/details/88785016 php上传到服务器打不开（No input file specified）： https://yq.aliyun.com/articles/34240 discuz：目录未找到或者无法访问./data/template https://blog.csdn.net/CityzenOldwang/article/details/60586992 html： markdown文本居中，段首缩进的方法 https://blog.csdn.net/ramfmy/article/details/51852075 设置图片大小 https://support.typora.io/Resize-Image/ 文字超链接 https://zhidao.baidu.com/question/567088203.html 插入图片 https://www.w3school.com.cn/tags/tag_img.asp css: CSS3 backdrop-filter() 实现背景毛玻璃效果，区别于 blur() https://blog.csdn.net/KimBing/article/details/99083613 https://www.imaegoo.com/2019/css-backdrop-blur/ CSS实现背景图片固定 https://blog.csdn.net/aalinsy/article/details/26461729 分割线： https://www.zfuhao.com/p/114720 VS Code注释快捷键: https://blog.csdn.net/correlate/article/details/85230757 CSS实现网页背景图片自适应全屏 https://www.cnblogs.com/neromaycry/p/8088828.html","link":"/posts/8922/"}],"tags":[{"name":"经验","slug":"经验","link":"/tags/%E7%BB%8F%E9%AA%8C/"}],"categories":[{"name":"其他","slug":"其他","link":"/categories/%E5%85%B6%E4%BB%96/"},{"name":"学习","slug":"学习","link":"/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"技术","slug":"技术","link":"/categories/%E6%8A%80%E6%9C%AF/"},{"name":"机器学习","slug":"机器学习","link":"/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"项目","slug":"项目","link":"/categories/%E9%A1%B9%E7%9B%AE/"}]}